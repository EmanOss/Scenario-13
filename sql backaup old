
CREATE TABLE IF NOT EXISTS public.comment
(
    id bigint NOT NULL,
    "blogId" bigint NOT NULL,
    "userId" bigint NOT NULL,
    date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT comment_pkey PRIMARY KEY (id),
    CONSTRAINT fk_comment_blog FOREIGN KEY ("blogId")
        REFERENCES public.blog (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT fk_comment_user FOREIGN KEY ("userId")
        REFERENCES public."user" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.comment
    OWNER to postgres;
    
-- Table: public.blog

-- DROP TABLE IF EXISTS public.blog;

CREATE TABLE IF NOT EXISTS public.blog
(
    id bigint NOT NULL,
    "creationDate" timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    text text COLLATE pg_catalog."default" NOT NULL,
    title character varying(75) COLLATE pg_catalog."default" NOT NULL,
    "authorId" bigint NOT NULL,
    CONSTRAINT blog_pkey PRIMARY KEY (id),
    CONSTRAINT fk_blog_user FOREIGN KEY ("authorId")
        REFERENCES public."user" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.blog
    OWNER to postgres;
    
    
    
-- Table: public.user

-- DROP TABLE IF EXISTS public."user";

CREATE TABLE IF NOT EXISTS public."user"
(
    id bigint NOT NULL,
    "firstName" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "lastName" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."user"
    OWNER to postgres;        
